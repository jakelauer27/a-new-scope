{"version":3,"sources":["utils/api/apiCalls.js","components/Stars/Stars.js","components/Stars/StarHousingComponent.js","components/Landing/Landing.js","components/Menu/Menu.js","components/ResidentsScroller/ResidentsScroller.js","components/Card/Card.js","components/Loading/Loading.js","utils/api/apiHelper.js","components/Main/Main.js","components/Error/Error.js","components/App/App.js","serviceWorker.js","index.js"],"names":["fetchTitleScroll","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","response","wrap","_context","prev","next","fetch","sent","ok","abrupt","json","Error","stop","this","apply","arguments","getCategoryData","_ref2","_callee2","category","_context2","concat","_x","convertPopulation","population","returnPop","getPeople","people","unresolvedPromises","map","_ref3","_callee3","person","homeworld","homeData","species","speciesData","_context3","name","type","main1","height","main2","mass","secInfoMain","secInfoOther","favorite","_x2","Promise","all","getResidents","residents","_ref4","_callee4","residentLink","resident","residentData","_context4","_x3","getPlanets","planets","_ref5","_callee5","planet","_context5","terrain","climate","_x4","Stars","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","paint","canvas","refs","ctx","getContext","arr","fillStyle","fillRect","width","i","randCoords","x","Math","random","y","size","mult","beginPath","ellipse","fill","push","setState","stars","repaint","state","deltaX","props","clearRect","length","react_default","createElement","ref","Component","StarHousingComponent","tick","newX","_this$state","direction","requestAnimationFrame","className","Stars_Stars","Landing","episode","title","year","substring","Link","to","role","src","alt","text","Menu","favoritesCount","JSON","parse","localStorage","getItem","ResidentsScroller","clickArrow","newIndex","currentIndex","newResidents","display","content1","content2","_this$props","formattedResident","_this2","_this$state2","onClick","key","uid","defaultProps","Card","flipCard","e","flipped","target","classList","contains","unflipped","toggleFavorite","cardObj","newCardObj","handleStoreData","objectSpread","updateFavorites","cardData","cardType","main1Label","main2Label","secHeader","cardObjPeople","replace","ResidentsScroller_ResidentsScroller","Loading","buildCategoryObj","data","categoryData","API","t0","results","vehicle","model","vehicle_class","passengers","Main","updateCards","setError","favorites","storage","getFavorites","race","APIHelper","resolve","reject","setTimeout","render","_this$props2","returnToLanding","current","Card_Card","PropTypes","func","App","handleTitleScroll","films","randomNumber","film","round","landingScroll","release_date","opening_crawl","updateFav","error","favoriteCategory","storeFavorite","updateStoredData","storeData","newStorage","assign","defineProperty","setItem","stringify","updatedCard","cardToUpdateIndex","find","card","currentFavorite","match","filter","StarHousingComponent_StarHousingComponent","Error_Error","Switch","Route","path","component","exact","Main_Main","Boolean","window","location","hostname","router","BrowserRouter","basename","process","App_App","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.94604472.chunk.js","sourcesContent":["export const fetchTitleScroll = async () => {\n  const response = await fetch('https://swapi.co/api/films/')\n  if (response.ok) {\n    return response.json()\n  }\n  throw new Error('Internal Server Error')\n}\n\nexport const getCategoryData = async (category) => {\n  const response = await fetch(`https://swapi.co/api/${category}`)\n  if (response.ok) {\n    return response.json()\n  }\n  throw new Error('Internal Server Error')\n}\n\nexport const convertPopulation = (population) => {\n  let returnPop = population\n  if (population >= 1000) {\n    returnPop = `${population / 1000}K`\n  }\n  if (population >= 1000000) {\n    returnPop = `${population / 1000000} million`\n  }\n  if (population >= 1000000000) {\n    returnPop = `${population / 1000000000} billion`\n  }\n  if (population >= 1000000000000) {\n    returnPop = `${population / 1000000000000} trillion`\n  }\n  return returnPop\n}\n\nexport const getPeople = (people) => {\n  const unresolvedPromises = people.map(async (person) => {\n    const homeworld = await fetch(person.homeworld)\n    const homeData = await homeworld.json()\n    const species = await fetch(person.species)\n    const speciesData = await species.json()\n    return {\n      name: person.name,\n      type: speciesData.name,\n      main1: person.height,\n      main2: person.mass,\n      secInfoMain: homeData.name,\n      secInfoOther: convertPopulation(homeData.population),\n      category: 'people',\n      favorite: false\n    }\n  })\n  return Promise.all(unresolvedPromises)\n}\n\nexport const getResidents = (residents) => {\n  const unresolvedPromises = residents.map(async (residentLink) => {\n    const resident = await fetch(residentLink)\n    const residentData = await resident.json()\n    return residentData.name\n  })\n  return Promise.all(unresolvedPromises)\n}\n\nexport const getPlanets = (planets) => {\n  const unresolvedPromises = planets.map(async (planet) => {\n    const residents = await getResidents(planet.residents)\n    return {\n      name: planet.name,\n      type: planet.terrain,\n      main1: convertPopulation(planet.population),\n      main2: planet.climate,\n      secInfoMain: residents,\n      secInfoOther: '',\n      category: 'planets',\n      favorite: false\n    }\n  })\n  return Promise.all(unresolvedPromises)\n}\n\nexport const getVehicles = vehicles => vehicles.map(\n  vehicle => ({\n    name: vehicle.name,\n    type: 'vehicle',\n    main1: vehicle.model,\n    main2: vehicle.vehicle_class,\n    secInfoMain: vehicle.passengers,\n    secInfoOther: '',\n    category: 'vehicles',\n    favorite: false\n  })\n)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nexport default class Stars extends Component {\n  constructor() {\n    super()\n    this.state = {\n      stars: []\n    }\n  }\n\n  componentDidMount() {\n    this.paint()\n  }\n\n  componentDidUpdate() {\n    const { stars } = this.state\n    if (stars.length > 0) {\n      this.repaint()\n    }\n  }\n\n  paint = () => {\n    const { canvas } = this.refs\n    const ctx = canvas.getContext('2d')\n    const arr = []\n\n    ctx.fillStyle = 'black'\n    ctx.fillRect(0, 0, canvas.width, canvas.height)\n\n    for (let i = 0; i < 2000; i += 1) {\n      const randCoords = {\n        x: Math.random() * canvas.width,\n        y: Math.random() * canvas.height,\n        size: Math.random() * 1,\n        mult: Math.random()\n      }\n      ctx.fillStyle = 'white'\n      ctx.beginPath()\n      ctx.ellipse(randCoords.x, randCoords.y, randCoords.size, 1, 4, 0, 4)\n      ctx.fill()\n      arr.push(randCoords)\n    }\n\n    this.setState({\n      stars: arr\n    })\n  }\n\n  repaint = () => {\n    const { stars } = this.state\n    const { deltaX } = this.props\n    const { canvas } = this.refs\n    const ctx = canvas.getContext('2d')\n\n    ctx.clearRect(0, 0, canvas.width, canvas.height)\n    ctx.fillStyle = 'black'\n    ctx.fillRect(0, 0, canvas.width, canvas.height)\n\n    for (let i = 0; i < 500; i += 1) {\n      if (i % 2 === 0) {\n        ctx.fillStyle = 'white'\n        ctx.beginPath()\n        ctx.ellipse(stars[i].x\n          + (stars[i].mult * deltaX), stars[i].y, stars[i].size, 1, 4, 0, 4)\n        ctx.fill()\n      } else {\n        ctx.fillStyle = 'white'\n        ctx.beginPath()\n        ctx.ellipse(stars[i].x\n          - (stars[i].mult * deltaX), stars[i].y, stars[i].size, 1, 4, 0, 4)\n        ctx.fill()\n      }\n    }\n  }\n\n\n  render() {\n    return (\n      <canvas ref=\"canvas\" width=\"2000px\" height=\"1000px\" />\n    )\n  }\n}\n\nStars.propTypes = {\n  deltaX: PropTypes.number.isRequired\n}\n","import React, { Component } from 'react'\nimport Stars from './Stars'\nimport '../App/app.scss'\n\nexport default class StarHousingComponent extends Component {\n  constructor() {\n    super()\n    this.state = {\n      deltaX: 0,\n      direction: true\n    }\n  }\n\n  componentDidMount() {\n    requestAnimationFrame(this.tick)\n  }\n\n  tick = () => {\n    const { direction, deltaX } = this.state\n    let newX\n\n    if (direction) {\n      newX = deltaX + 0.08\n    } else {\n      newX = deltaX - 0.08\n    }\n\n    if (newX > 180 || newX < 0) {\n      this.setState({\n        deltaX: newX,\n        direction: !direction\n      })\n    } else {\n      this.setState({\n        deltaX: newX\n      })\n    }\n    requestAnimationFrame(this.tick)\n  }\n\n  render() {\n    const { deltaX } = this.state\n    return (\n      <div className=\"star-housing\">\n        <Stars deltaX={deltaX} />\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nexport default function Landing({ episode }) {\n  return (\n    <div className=\"landing\">\n      <header className=\"landing-header\">\n        <div className=\"header-right\">\n          <h2 className=\"landing-title\">{episode.title}</h2>\n          <h2 className=\"landing-year\">{episode.year.substring(0, 4)}</h2>\n        </div>\n        <div className=\"continue-to-site-btn\">\n          <Link className=\"enter-btn-link\" to=\"/menu\">\n            <h2 className=\"enter-btn\" role=\"presentation\">ENTER</h2>\n          </Link>\n          <img src=\"./images/outerring.svg\" alt=\"ring\" className=\"outerring ring\" />\n          <img src=\"./images/outerring.svg\" alt=\"ring\" className=\"middlering ring\" />\n          <img src=\"./images/outerring.svg\" alt=\"ring\" className=\"innerring ring\" />\n        </div>\n        <h1 className=\"main-title2\">a new scope</h1>\n      </header>\n      <section className=\"scroll-text\">\n        <div className=\"fade-overlay\" />\n        <div className=\"crawl\">\n          <div className=\"title\">\n            <h1 className=\"scroll-title\">{episode.title}</h1>\n          </div>\n          <p>{episode.text}</p>\n        </div>\n      </section>\n      <img className=\"millenium-landing\" alt=\"Millenium Falcon\" src=\"./images/millenium_color.png\" />\n    </div>\n  )\n}\n\nLanding.propTypes = {\n  episode: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object\n  ]).isRequired\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default function Menu() {\n\n  const favoritesCount = JSON.parse(localStorage.getItem('favorites')) || []\n\n  return (\n    <div className=\"menu\">\n      <h1 className=\"main-title\">a new scope</h1>\n      <div className=\"favorites-path\">\n        <Link to=\"./favorites\">\n          <div\n            role=\"presentation\"\n            className=\"favorites-planet\"\n          >\n            <h2 className=\"favoritesCount\">{favoritesCount.length || 0}</h2>\n            <h3 className=\"planet-label\">Favorites</h3>\n          </div>\n        </Link>\n        <div className=\"vehicles-path\">\n          <Link to=\"/vehicles\">\n            <div\n              role=\"presentation\"\n              className=\"vehicles-planet\"\n            >\n              <h3 className=\"planet-label\">Vehicles</h3>\n            </div>\n          </Link>\n          <div className=\"planets-path\">\n            <Link to=\"/planets\">\n              <div\n                role=\"presentation\"\n                className=\"planets-planet\"\n              >\n                <h3 className=\"planet-label\">Planets</h3>\n              </div>\n            </Link>\n            <div className=\"people-path\">\n              <Link to=\"/people\">\n                <div\n                  role=\"presentation\"\n                  className=\"people-planet\"\n                >\n                  <h3 className=\"planet-label\">People</h3>\n                </div>\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"alt-menu-container\">\n        <Link to=\"/favorites\">\n          <div\n            role=\"presentation\"\n            className=\"alt-menu alt-menu-favorites\"\n          >\n            <h3 className=\"planet-label\">Favorites</h3>\n          </div>\n        </Link>\n        <Link to=\"/vehicles\">\n          <div\n            role=\"presentation\"\n            className=\"alt-menu alt-menu-vehicles\"\n          >\n            <h3 className=\"planet-label\">Vehicles</h3>\n          </div>\n        </Link>\n        <Link to=\"/planets\">\n          <div\n            role=\"presentation\"\n            className=\"alt-menu alt-menu-planets\"\n          >\n            <h3 className=\"planet-label\">Planets</h3>\n          </div>\n        </Link>\n        <Link to=\"/people\">\n          <div\n            role=\"presentation\"\n            className=\"alt-menu alt-menu-people\"\n          >\n            <h3 className=\"planet-label\">People</h3>\n          </div>\n        </Link>\n      </div>\n    </div>\n  )\n}\n","import React, { Component } from 'react'\nimport propTypes from 'prop-types'\nimport { uid } from 'react-uid'\n\nexport default class ResidentsScroller extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      residents: [],\n      content1: '',\n      content2: '',\n      currentIndex: 0\n    }\n  }\n\n  componentDidMount() {\n    const { content1, content2 } = this.props\n    if (content1.length === 0) {\n      this.setState({\n        residents: [{ name: 'none', display: '' }]\n      })\n    } else if (typeof content1 !== 'string') {\n      this.setState({\n        residents: content1.map((resident, i) => {\n          let formattedResident = { name: resident, display: 'none' }\n          if (i === 0) {\n            formattedResident = { name: resident, display: '' }\n          }\n          return formattedResident\n        })\n      })\n    } else {\n      this.setState({\n        content1,\n        content2\n      })\n    }\n  }\n\n  clickArrow = (direction) => {\n    const { residents, currentIndex } = this.state\n    let newIndex = direction + currentIndex\n    if (newIndex < 0) { newIndex = residents.length - 1 }\n    if (newIndex >= residents.length) { newIndex = 0 }\n\n    const newResidents = residents.map((resident, i) => {\n      let formattedResident\n      if (i === newIndex) {\n        formattedResident = { name: resident.name, display: '' }\n      } else {\n        formattedResident = { name: resident.name, display: 'none' }\n      }\n      return formattedResident\n    })\n\n    this.setState({\n      currentIndex: newIndex,\n      residents: newResidents\n    })\n  }\n\n  render() {\n    const { residents, content1, content2 } = this.state\n\n    if (content1) {\n      return (\n        <div className=\"secInfo\">\n          <h1 className=\"homeworld\">{content1}</h1>\n          <h1 className=\"population\">{content2}</h1>\n        </div>\n      )\n    }\n\n    return (\n      <div className=\"residents-scroller\">\n        <i className=\"fas fa-caret-left resident-arrow\" role=\"presentation\" onClick={() => this.clickArrow(-1)} />\n        <i className=\"fas fa-caret-right resident-arrow\" role=\"presentation\" onClick={() => this.clickArrow(1)} />\n        {\n          residents.map(resident => (\n            <h4\n              className={`resident ${resident.display}`}\n              key={uid(resident)}\n            >\n              {resident.name}\n            </h4>\n          ))\n        }\n      </div>\n    )\n  }\n}\n\nResidentsScroller.propTypes = {\n  content1: propTypes.oneOfType([propTypes.string, propTypes.array]).isRequired,\n  content2: propTypes.string\n}\n\nResidentsScroller.defaultProps = {\n  content2: ''\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport ResidentsScroller from '../ResidentsScroller/ResidentsScroller'\n\nexport default class Card extends Component {\n  constructor() {\n    super()\n    this.state = {\n      flipped: false,\n      unflipped: false,\n      cardObj: null\n    }\n  }\n\n  componentDidMount() {\n    const { cardData, cardType } = this.props\n    const cardObj = {\n      category: cardData.category,\n      favorite: cardData.favorite,\n      name: cardData.name,\n      type: cardData.type,\n      main1Label: '',\n      main1: cardData.main1,\n      main2Label: '',\n      main2: cardData.main2,\n      secHeader: '',\n      secInfoMain: cardData.secInfoMain,\n      secInfoOther: cardData.secInfoOther || ''\n    }\n\n    switch (cardType) {\n      case 'people':\n        cardObj.main1Label = 'Height'\n        cardObj.main2Label = 'Weight'\n        cardObj.secHeader = 'Homeworld'\n        break\n      case 'vehicles':\n        cardObj.main1Label = 'Model'\n        cardObj.main2Label = 'Class'\n        cardObj.secHeader = 'Passengers'\n        break\n      case 'planets':\n        cardObj.main1Label = 'Population'\n        cardObj.main2Label = 'Climate'\n        cardObj.secHeader = 'Residents'\n        break\n      default:\n        break\n    }\n\n    this.setState({ cardObj })\n  }\n\n  flipCard = (e) => {\n    const { flipped } = this.state\n    if (e.target.classList.contains('resident-arrow')\n      || e.target.classList.contains('favorite-btn')) { return }\n\n    if (flipped === true) {\n      this.setState({\n        flipped: false,\n        unflipped: true\n      })\n    } else {\n      this.setState({\n        flipped: true,\n        unflipped: false\n      })\n    }\n  }\n\n  toggleFavorite = async (cardObj) => {\n    const newCardObj = { ...cardObj, favorite: !cardObj.favorite }\n    const { handleStoreData } = this.props\n    await this.setState({ cardObj: newCardObj })\n    handleStoreData('favorites', newCardObj, newCardObj.favorite, cardObj.category)\n    if (this.props.favorite === 'favorites') {\n      this.props.updateFavorites()\n    }\n  }\n\n  render() {\n    const { flipped, unflipped, cardObj } = this.state\n    const { cardType } = this.props\n    let cardObjPeople\n    if (cardType === 'people') {\n      cardObjPeople = true\n    } else {\n      cardObjPeople = ''\n    }\n    if (cardObj === null) {\n      return (<div />)\n    }\n    return (\n      <div\n        className={`card ${flipped && 'flipped'} ${unflipped && 'unflipped'}`}\n        role=\"presentation\"\n        onClick={e => this.flipCard(e)}\n      >\n        <div className=\"card-front\">\n          <div className={`image-side-title card-title card-header-${cardType}`}>\n            <h1>{cardObj.name}</h1>\n            <i\n              className={`fas fa-star ${cardObj.favorite && 'favorite'} favorite-btn`}\n              role=\"presentation\"\n              onClick={() => this.toggleFavorite(cardObj)}\n            />\n          </div>\n          <img className=\"front-image\" src={`./images/${cardObj.name.replace('/', '-')}.jpg`} alt=\"\" />\n        </div>\n        <div className={` card-title card-header-${cardType}`}>\n          <h1>{cardObj.name}</h1>\n          <i\n            className={`fas fa-star ${cardObj.favorite && 'favorite'} favorite-btn`}\n            role=\"presentation\"\n            onClick={() => this.toggleFavorite(cardObj)}\n          />\n        </div>\n        <h1 className=\"card-type\">{cardObj.type}</h1>\n        <div className=\"stats-container\">\n          <div className=\"stat\">\n            <h1>{cardObj.main1Label}</h1>\n            <p>{`${cardObj.main1} ${cardObjPeople && 'cm'}`}</p>\n          </div>\n          <div className=\"div-line\" />\n          <div className=\"stat\">\n            <h1>{cardObj.main2Label}</h1>\n            <p>{`${cardObj.main2} ${cardObjPeople && 'kg'}`}</p>\n          </div>\n        </div>\n        <div>\n          <div className={`homeworld-title card-header-${cardType}`}>\n            <h1 className={`card-header-${cardType}`}>{cardObj.secHeader}</h1>\n          </div>\n          <ResidentsScroller\n            content1={cardObj.secInfoMain}\n            content2={cardObj.secInfoOther}\n          />\n        </div>\n        <img className=\"card-icon\" alt=\"card icon\" src={`./images/${cardType}_icon.svg`} />\n      </div>\n    )\n  }\n}\n\nCard.propTypes = {\n  cardType: PropTypes.string,\n  cardData: PropTypes.object.isRequired,\n  handleStoreData: PropTypes.func,\n  favorite: PropTypes.string,\n  updateFavorites: PropTypes.func\n}\n\nCard.defaultProps = {\n  cardType: '',\n  handleStoreData: null\n}\n","import React from 'react'\n\nexport default function Loading() {\n  return (\n    <div className=\"loading-container\">\n      <div className=\"loading-animation\">\n        <div className=\"millenium-div\">\n          <img className=\"loading-millenium\" src=\"./images/load_millenium.svg\" alt=\"millenium falcon\" />\n          <div className=\"blaster1 blaster\" />\n          <div className=\"blaster2 blaster\" />\n        </div>\n        <div className=\"tie-div\">\n          <img className=\"loading-tiefighter\" src=\"./images/load_tiefighter.svg\" alt=\"millenium falcon\" />\n        </div>\n      </div>\n      <h2 className=\"loading-text\">Loading...</h2>\n    </div>\n  )\n}\n","import * as API from './apiCalls'\n\nexport const buildCategoryObj = async (category) => {\n  const data = await API.getCategoryData(category)\n  let categoryData = ''\n\n  switch (category) {\n    case 'people':\n      categoryData = await API.getPeople(data.results)\n      break\n    case 'vehicles':\n      categoryData = await API.getVehicles(data.results)\n      break\n    case 'planets':\n      categoryData = await API.getPlanets(data.results)\n      break\n    default:\n      break\n  }\n\n  return categoryData\n}\n","import React, { Component } from 'react'\nimport { uid } from 'react-uid'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport Card from '../Card/Card'\nimport Loading from '../Loading/Loading'\nimport * as APIHelper from '../../utils/api/apiHelper'\n\n\nexport default class Main extends Component {\n  constructor() {\n    super()\n    this.state = {\n      categoryData: []\n    }\n  }\n\n  componentDidMount() {\n    this.updateCards()\n  }\n\n  updateCards = async () => {\n    const { category, handleStoreData, setError } = this.props\n    if (category === 'favorites') {\n      const favorites = JSON.parse(localStorage.getItem('favorites'))\n      return this.getFavorites(favorites)\n    }\n    let categoryData\n    const storage = JSON.parse(localStorage.getItem('storedData'))\n    if (!storage || !storage[category]) {\n      try {\n        categoryData = await Promise.race([\n          APIHelper.buildCategoryObj(category),\n          new Promise((resolve, reject) => {\n            setTimeout(() => reject(new Error()), 5000)\n          })\n        ])\n        await this.setState({ categoryData })\n        return handleStoreData(category, categoryData)\n      } catch {\n        return setError(true)\n      }\n    }\n    return this.setState({ categoryData: storage[category] })\n  }\n\n  getFavorites(favorites) {\n    if (!favorites || favorites.length === 0) {\n      this.setState({\n        categoryData: 'none'\n      })\n    } else {\n      this.setState({\n        categoryData: favorites\n      })\n    }\n  }\n\n  render() {\n    const { category, returnToLanding, handleStoreData } = this.props\n    const { categoryData } = this.state\n    let render\n\n    if (!categoryData.length) {\n      render = (\n        <div className=\"App\">\n          <Loading />\n        </div>\n      )\n    } else if (categoryData === 'none' || categoryData === []) {\n      render = (\n        <div className=\"no-favorite-message\">You have no saved favorites</div>\n      )\n    } else {\n      render = categoryData.map(current => (<Card\n        handleStoreData={handleStoreData}\n        cardData={current}\n        key={uid(current)}\n        cardType={current.category}\n        updateFavorites={this.updateCards}\n        favorite={category}\n      />\n      ))\n    }\n    return (\n      <main className=\"main\">\n        <div className=\"header-container\">\n          <Link to=\"/menu\">\n            <div className=\"continue-to-site-btn back-rings\" role=\"presentation\">\n              <img src=\"./images/outerring.svg\" alt=\"ring\" className=\"outerring ring\" />\n              <img src=\"./images/outerring.svg\" alt=\"ring\" className=\"middlering ring\" />\n              <img src=\"./images/outerring.svg\" alt=\"ring\" className=\"innerring ring\" />\n              <h3 className=\"planet-label back-to-menu\">Menu</h3>\n            </div>\n          </Link>\n          <h1 className=\"main-header\">{category}</h1>\n        </div>\n        <section className=\"card-section\">\n          {render}\n        </section>\n        <Link to=\"/\">\n          <img\n            className=\"return-to-landing-btn\"\n            alt=\"Landing Btn\"\n            src=\"./images/millenium_color.png\"\n            role=\"presentation\"\n            onClick={() => returnToLanding()}\n          />\n        </Link>\n      </main>\n    )\n  }\n}\n\nMain.propTypes = {\n  returnToLanding: PropTypes.func,\n  category: PropTypes.string,\n  handleStoreData: PropTypes.func,\n  setError: PropTypes.func\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\n\nexport default function Error(props) {\n  return (\n    <div className=\"error-box\">\n      <img className=\"error-darth\" src=\"./images/darth.svg\" alt=\"Darth Vader Error\" />\n      <h1 className=\"sith-happens\">Sith Happens...</h1>\n      <h4 className=\"error-sub\">Oops, something seems to have gone wrong.</h4>\n      <Link to=\"/\">\n        <button\n          className=\"error-sub error-button\"\n          type=\"submit\"\n          onClick={() => {\n            props.returnToLanding()\n            props.setError(false)\n          }}\n        >\nClick here to return to site.\n        </button>\n      </Link>\n    </div>\n  )\n}\n\nError.propTypes = {\n  returnToLanding: PropTypes.func,\n  setError: PropTypes.func\n}\n\nError.defaultProps = {\n  returnToLanding: null,\n  setError: PropTypes.func\n}\n","import React, { Component } from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport * as API from '../../utils/api/apiCalls'\nimport StarHousingComponent from '../Stars/StarHousingComponent'\nimport Landing from '../Landing/Landing'\nimport Menu from '../Menu/Menu'\nimport Main from '../Main/Main'\nimport Loading from '../Loading/Loading'\nimport Error from '../Error/Error'\nimport './app.scss'\n\nexport default class App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      error: false,\n      landingScroll: '',\n    }\n  }\n\n  componentDidMount() {\n    this.handleTitleScroll()\n  }\n\n  handleTitleScroll = async () => {\n    try {\n      const films = await Promise.race([\n        API.fetchTitleScroll(),\n        new Promise((resolve, reject) => {\n          setTimeout(() => reject(new Error()), 8000)\n        })\n      ])\n      const randomNumber = Math.round(Math.random() * 8)\n      const film = films.results[randomNumber]\n      this.setState({\n        landingScroll: {\n          title: film.title,\n          year: film.release_date,\n          text: film.opening_crawl\n        },\n        updateFav: false\n      })\n    } catch (error) {\n      this.setState({ error: true })\n    }\n  }\n\n  handleStoreData = (category, categoryData, favorite, favoriteCategory) => {\n    if (category === 'favorites') {\n      this.storeFavorite(categoryData, favorite)\n      this.updateStoredData(favoriteCategory, categoryData)\n    } else {\n      this.storeData(category, categoryData)\n    }\n  }\n\n  storeData = (category, categoryData) => {\n    const storage = JSON.parse(localStorage.getItem('storedData'))\n    const newStorage = Object.assign({ [category]: categoryData, ...storage })\n    localStorage.setItem('storedData', JSON.stringify(newStorage))\n  }\n\n  updateStoredData = (category, updatedCard) => {\n    const storage = (JSON.parse(localStorage.getItem('storedData')))\n    let cardToUpdateIndex = 0\n    if (storage) {\n      storage[category].find((card, i) => {\n        if (card.name === updatedCard.name) {\n          cardToUpdateIndex = i\n        }\n      })\n      storage[category][cardToUpdateIndex] = updatedCard\n      localStorage.setItem('storedData', JSON.stringify(storage))\n    }\n  }\n\n  storeFavorite = (data, currentFavorite) => {\n    let favorites = JSON.parse(localStorage.getItem('favorites')) || []\n    if (!currentFavorite) {\n      const match = favorites.find(favorite => favorite.name === data.name)\n      favorites = favorites.filter(favorite => favorite.name !== match.name)\n    } else {\n      favorites.push(data)\n    }\n    localStorage.setItem('favorites', JSON.stringify(favorites))\n  }\n\n  setError = (error) => {\n    this.setState({ error })\n  }\n\n  render() {\n    const { error, landingScroll, updateFav } = this.state\n\n    if (error) {\n      return (\n        <div className=\"App\">\n          <StarHousingComponent />\n          <Error\n            returnToLanding={this.handleTitleScroll}\n            setError={this.setError}\n          />\n        </div>\n      )\n    }\n\n    if (!landingScroll) {\n      return (\n        <div className=\"App\">\n          <StarHousingComponent />\n          <Loading />\n        </div>\n      )\n    }\n\n    return (\n      <div className=\"App\">\n        <StarHousingComponent />\n        <Switch>\n          <Route path=\"/menu\" component={Menu} />\n          <Route\n            exact\n            path=\"/\"\n            render={() => (\n              <Landing\n                episode={landingScroll}\n              />\n            )}\n          />\n          <Route\n            path=\"/people\"\n            render={() => (\n              <Main\n                handleStoreData={this.handleStoreData}\n                category=\"people\"\n                returnToLanding={this.handleTitleScroll}\n                setError={this.setError}\n              />\n            )}\n          />\n          <Route\n            path=\"/vehicles\"\n            render={() => (\n              <Main\n                handleStoreData={this.handleStoreData}\n                category=\"vehicles\"\n                returnToLanding={this.handleTitleScroll}\n                setError={this.setError}\n              />\n            )}\n          />\n          <Route\n            path=\"/planets\"\n            render={() => (\n              <Main\n                handleStoreData={this.handleStoreData}\n                category=\"planets\"\n                returnToLanding={this.handleTitleScroll}\n                setError={this.setError}\n              />\n            )}\n          />\n          <Route\n            path=\"/favorites\"\n             render={() => (\n              <Main\n                handleStoreData={this.handleStoreData}\n                category=\"favorites\"\n                returnToLanding={this.handleTitleScroll}\n                setError={this.setError}\n              />\n            )}\n          />\n          <Route\n            path=\"\"\n            render={() => {\n              return (\n                <div>\n                  <StarHousingComponent />\n                  <Error\n                    returnToLanding={this.handleTitleScroll}\n                    setError={this.setError}\n                  />\n                </div>  \n              )\n            }}\n          >\n          </Route>\n        </Switch>\n      </div>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport { BrowserRouter } from 'react-router-dom'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/App/App'\nimport * as serviceWorker from './serviceWorker'\n\nconst router = (\n  <BrowserRouter basename={`${process.env.PUBLIC_URL}`}>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(router, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}